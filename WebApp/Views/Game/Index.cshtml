@model WebApplication1.Models.GameViewModel
@{
    ViewBag.Title = "Playing..";
    Layout = "~/Views/Shared/_LayoutFull.cshtml";
}
<style>
    #selectRole { margin-bottom: 10px; }
    #sendMessage { margin-bottom: 10px; }
    #sendMessage #message { width: 400px; }
    .error {color:red;}
</style>

<link rel="stylesheet" href="@Url.Content("~/Content/proxy.css")" />

<div class="game">

    <div class="nav-space"></div>
    <div class="players"></div>

    <div class="turn">
        <div id="turnOrder"></div>
        <div id="steps"></div>
        <div id="selectType"></div>
        <div id="selection"></div>
    </div>

    <div class="hand"></div>

    <div id="gameLog">
        <div id="selectRole">
            <select>
                <option value="0">Player 1 - Blessed</option>
                <option value="1">Player 2 - Cursed</option>
            </select>
            <input type="button" id="setPlayer" value="Select Deck" />
            <input type="button" id="startNewGame" value="Start Game" />

            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="playerId" />
        </div>

        <ul id="discussion"></ul>
    </div>
</div>

<!--Script references. -->
<!--Reference the jQuery library. -->
<script src="/Scripts/jquery-1.10.2.min.js"></script>
<!--Reference the SignalR library. -->
<script src="/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="/signalr/hubs"></script>
<!--Add script to update the page and send messages.-->
<script type="text/javascript">

    function addPlayer(json) {
        $('.players').append('<div class="player" id="id_'+json.ID+'">Name: ' + json.Name + ', Deck: '+ json.Decksize+'</div>');
    }

    function draw(json) {
        $('.hand').append('<li id="id_' + json.Card.Id + '">' + json.Card.Name + '</li>');
    }

    function setLife(json) {
        UpdatePlayerView(json.PlayerView);
    }

    function TurnOrder(order) {
        $('turnOrder').empty();
        $.each(order, function (key, val) {
            $('.turnOrder').append('<li>' + val + '</li>');
        });
    }

    function moveCard(card) {
        
    }

    function BeginStep(data) {
        $('.step').css('background-color', '#ccc');
        $('#step_'+data.Step).css('background-color', '#cfc');
    }

    function Priority(data) {
        var id = '#id_' + data.Id;
        $('.player').css('background-color', '#ccc');
        $(id).css('background-color', '#cfc');
        data.Player;
    }

    function TakeAction(info) {
        $('#selectType').text(info.Type);
        $('#selection').empty();
        $.each(info.Selection, function (key, val) {
            //  get name from some list..
            var name = val;
            $('#selection').append('<button onClick="Reply(' + key + ')">' + name + '</button> ');
        });
    }

    function BeginTurn(data) {
        TurnOrder(data.TurnOrder);

        $('#steps').empty();
        $.each(data.Steps, function (key, val) {
            $('#steps').append('<span class="step" id="step_' + val + '">' + val + '</span> ');
        });

        data.Turns;
    }
    function UpdateView(view) {
        $.each(view.Players, function (key, val) {
            UpdatePlayerView(val);
        });
        view.Steps;
        view.Turns;
    }

    function UpdatePlayerView(view) {
        var id = '#id_' + view.ID;
        $.each(view, function (key, val) {
            if (key == 'Life') {
                $(id).append('<span>Life: ' + val + '</span>');
            }
        });
    }

    function Reply(data) {
        var chat = $.connection.chatHub;
        chat.server.send(data);
    }


    $(function () {


        var chat = $.connection.chatHub;

        chat.client.broadcastMessage = function (name, data) {
            var obj = jQuery.parseJSON(data);

            $.each(obj, function (key, val) {

                if (key == 'Message')
                    $('#discussion').append('<li>' + val.Text + '</li>');

                else if (key == 'Error')
                    $('#discussion').append('<li class="error">' + val.Text + '</li>');

                else if (key == 'Draw')
                    draw(val);

                else if (key == 'AddPlayer')
                    addPlayer(val);

                else if (key == 'SetLife')
                    setLife(val);

                else if (key == 'BeginTurn')
                    BeginTurn(val);

                else if (key == 'Move')
                    moveCard(val);

                else if (key == 'View')
                    UpdateView(val);

                else if (key == 'Priority')
                    Priority(val);

                else if (key == 'TurnOrder')
                    TurnOrder(val.TurnOrder);

                else if (key == 'BeginStep')
                    BeginStep(val);

                else if (key == 'TakeAction')
                    TakeAction(val);

                else $.each(val, function (key2, val2) {
                    var encodedName = $('<div />').text(name).html();
                    var encodedMsg = $('<div />').text(key + ' :: ' + key2 + ' : ' + val2).html();
                    $('#discussion').append('<li><strong>' + encodedName
                        + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                });

            });

            $("#gameLog").scrollTop($("#gameLog")[0].scrollHeight);
        };

        function connectionStateChanged(state) {
            var stateConversion = { 0: 'connecting', 1: 'connected', 2: 'reconnecting', 4: 'disconnected' };
            console.log('SignalR state changed from: ' + stateConversion[state.oldState]
             + ' to: ' + stateConversion[state.newState]);
        }

        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                chat.server.send($('#message').val());
                $('#message').val('').focus();
            });


            $('#setPlayer').click(function () {
                $('#playerId').val($('#selectRole option:selected').val());
                chat.server.setPlayer($('#playerId').val());
            });

            $('#startNewGame').click(function () {
                chat.server.startNew();
            });
        })
        .fail(function () {
            alert("Could not Connect!");
        });


        $.connection.hub.disconnected(function () {
            setTimeout(function () {
                $.connection.hub.start();
            }, 5000); // Re-start connection after 5 seconds
        });



    });
</script>
