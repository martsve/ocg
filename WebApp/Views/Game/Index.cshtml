@model WebApplication1.Models.GameViewModel
@{
    ViewBag.Title = "Playing..";
    Layout = "~/Views/Shared/_LayoutFull.cshtml";
}
<style>
    #selectRole { margin-bottom: 10px; }
    #sendMessage { margin-bottom: 10px; }
    #sendMessage #message { width: 400px; }
</style>

<link rel="stylesheet" href="@Url.Content("~/Content/proxy.css")" />

<script>
function allowDrop(ev) {
    ev.preventDefault();
}

function drag(ev) {
    ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
    ev.preventDefault();
    var data = ev.dataTransfer.getData("text");
    ev.target.appendChild(document.getElementById(data));
}
</script>

<div class="game">

    <div class="nav-space"></div>

    <div class="player">
        <div class="player-info">
            <span class="name">P1</span>
            <span class="life">20</span>
            <span class="libraryCount">60</span>
            <span class="handCiunt">7</span>
            <span class="graveCount">0</span>
            <span class="exileCount">0</span>
        </div>
        <div class="mana">
            <span class="w">0</span>
            <span class="u">0</span>
            <span class="b">0</span>
            <span class="r">0</span>
            <span class="g">0</span>
        </div>
        <div class="battlefield">
            <a href="" id="drag1" draggable="true" ondragstart="drag(event)"><div id="proxyTemplate">@Html.Partial("Card", Model.CardViewModel)</div></a>
        </div>
    </div>

    <div class="player">
        <div class="player-info">
        </div>
        <div id="div1" class="battlefield" ondrop="drop(event)" ondragover="allowDrop(event)">
            <div id="proxyTemplate">@Html.Partial("Card", Model.CardViewModel)</div>
        </div>
    </div>

    <div class="turn">
    </div>

    <div class="hand"></div>

    <div id="gameLog">
        <div id="selectRole">
            <select>
                <option value="0">Player 1 - Blessed</option>
                <option value="1">Player 2 - Cursed</option>
            </select>
            <input type="button" id="setPlayer" value="Select Deck" />
            <input type="button" id="startNewGame" value="Start Game" />

            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="playerId" />
        </div>

        <ul id="discussion"></ul>
    </div>
</div>

<!--Script references. -->
<!--Reference the jQuery library. -->
<script src="/Scripts/jquery-1.10.2.min.js"></script>
<!--Reference the SignalR library. -->
<script src="/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="/signalr/hubs"></script>
<!--Add script to update the page and send messages.-->
<script type="text/javascript">
    $(function () {
        var chat = $.connection.chatHub;

        chat.client.broadcastMessage = function (name, data) {
            var obj = jQuery.parseJSON(data);
            $.each(obj, function (key, val) {


                if (key == 'Draw') {
                    $('.hand').append('<li>' + val + '</li>');
                }

                $.each(val, function (key2, val2) {
                    var encodedName = $('<div />').text(name).html();
                    var encodedMsg = $('<div />').text(key + ' :: ' + key2 + ' : ' + val2).html();
                    $('#discussion').append('<li><strong>' + encodedName
                        + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                });

            });

            $("#gameLog").scrollTop($("#gameLog")[0].scrollHeight);
        };

        function connectionStateChanged(state) {
            var stateConversion = { 0: 'connecting', 1: 'connected', 2: 'reconnecting', 4: 'disconnected' };
            console.log('SignalR state changed from: ' + stateConversion[state.oldState]
             + ' to: ' + stateConversion[state.newState]);
        }

        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                chat.server.send($('#message').val());
                $('#message').val('').focus();
            });

            
            $('#setPlayer').click(function () {
                $('#playerId').val($('#selectRole option:selected').val());
                chat.server.setPlayer($('#playerId').val());
            });

            $('#startNewGame').click(function () {
                chat.server.startNew();
            });
        })
        .fail(function () {
            alert("Could not Connect!");
        })
        .stateChanged(connectionStateChanged);


    });
</script>
